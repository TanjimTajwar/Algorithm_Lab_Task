name: Auto Test

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [8, 11, 17]
        python-version: [3.8, 3.9, '3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Java tests
        run: |
          ./gradlew test jacocoTestReport

      - name: Run Python tests
        run: |
          pytest --cov=./ --cov-report=xml

      - name: Upload Java coverage
        uses: codecov/codecov-action@v2
        with:
          file: ./build/reports/jacoco/test/html/index.html
          fail_ci_if_error: true

      - name: Upload Python coverage
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

      - name: Check test coverage
        run: |
          # Check Java coverage
          if [ -f "build/reports/jacoco/test/html/index.html" ]; then
            coverage=$(grep -oP 'Total.*?(\d+\.\d+)%' build/reports/jacoco/test/html/index.html | grep -oP '\d+\.\d+')
            if (( $(echo "$coverage < 80" | bc -l) )); then
              echo "Java test coverage is below 80%: $coverage%"
              exit 1
            fi
          fi
          
          # Check Python coverage
          if [ -f "coverage.xml" ]; then
            coverage=$(grep -oP 'line-rate="(\d+\.\d+)"' coverage.xml | grep -oP '\d+\.\d+')
            if (( $(echo "$coverage < 80" | bc -l) )); then
              echo "Python test coverage is below 80%: $coverage%"
              exit 1
            fi
          fi

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.issue;
            const comment = `Tests completed successfully!
            - Java tests passed
            - Python tests passed
            - Coverage requirements met
            - All checks passed`;
            
            github.rest.issues.createComment({
              owner: issue.owner,
              repo: issue.repo,
              issue_number: issue.number,
              body: comment
            }); 